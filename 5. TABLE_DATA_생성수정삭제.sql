-- 21.12.13 
-- DML (DATA MANIPLATION LANGUAGE) : INSERT(행추가), UPDATE(행데이터수정), DELETE(행삭제), SELECT

DESC DEPT01;
SELECT * FROM DEPT01;

SELECT * FROM DEPT01;

INSERT INTO DEPT01 (DNAME, DEPTNO, LOC)
VALUES('HR', 20, 'BOSTON');

-- TABLE 이름 다음에 나오는 속성 갯수와 VALUES 다음에 나오는 실제 속성 값의 순서와 데이터 타입이 일치해야 함
INSERT INTO DEPT01 (DEPTNO, DNAME, LOC)
VALUES(30, 'SALES', 'LA', 50);

INSERT INTO DEPT01 (DEPTNO, DNAME, LOC)
VALUES(30, 'SALES', 50);

DELETE FROM DEPT01 WHERE DEPTNO=30;
DELETE FROM DEPT01 WHERE DEPTNO=20;

-- TABLE이름 다음에 속성 값을 설정안해도 됨. 
-- 단, SELECT할 때 나오는 속성이름 순서대로 VALUES의 속성값을 넣어야 함
INSERT INTO DEPT01 (DEPTNO, DNAME, LOC)
VALUES(30, 'SALES', 'LA');

SELECT * FROM DEPT01;

-- 속성 값으로 NULL 입력하기
DESC DEPT;
SELECT * FROM DEPT;
ALTER TABLE DEPT 
MODIFY (DEPTNO NUMBER(2) PRIMARY KEY);

DESC DEPT01;

SELECT * FROM DEPT01;

-- INSERT를 할 때, 해당 속성 값을 아예 제외하면, INSERTR결과로 해당 속성 값이 NULL로 할당되
INSERT INTO DEPT01 (DEPTNO, DNAME)
VALUES (40, 'OPERATIONS');
-- INSERT를 할 때, 해당 속성 값을 NULL로 직접입력함(이 방법을 사용할 것을 추천)
INSERT INTO DEPT01 (DEPTNO, DNAME, LOC)
VALUES (50, 'OP2', NULL);

INSERT INTO DEPT01 (DEPTNO, DNAME, LOC)
VALUES (60, 'OP3', '');

-- 서브쿼리로 데이터 삽입하기
DROP TABLE DEPT01; 

CREATE TABLE DEPT01
AS
SELECT * FROM DEPT WHERE 1=0;

SELECT * FROM DEPT01;

INSERT INTO DEPT01
SELECT * FROM DEPT;

SELECT * FROM EMP01;

DROP TABLE EMP01;

CREATE TABLE EMP01
AS
SELECT * FROM EMP WHERE 1=0;

-- SUBQUERY 사용해서 EMP TABLE의 DEPTNO가 10인 것만 INSERT
INSERT INTO EMP01
SELECT * FROM EMP WHERE DEPTNO=10;

SELECT * FROM EMP01;

-- INSERT ALL 명령어로 다중 테이블에 다중행 입력하기
-- 1=0 : FALSE 결과 : 껍데기만 복사함. (행이 FALSE여서 선택이 안된다. )
CREATE TABLE EMP_HR
AS
SELECT EMPNO, ENAME, HIREDATE FROM EMP WHERE 1=0;

DESC EMP_HR;

CREATE TABLE EMP_MGR
AS 
SELECT EMPNO, ENAME, MGR FROM EMP WHERE 1=0;

DESC EMP_MGR;

INSERT ALL 
INTO EMP_HR VALUES (EMPNO, ENAME, HIREDATE)
INTO EMP_MGR VALUES (EMPNO, ENAME, MGR)
SELECT EMPNO, ENAME, HIREDATE, MGR FROM EMP WHERE DEPTNO=20;

SELECT * FROM EMP_HR;
SELECT * FROM EMP_MGR;

-- INSERT ALL 2번째 예 (WHEN 사용)
CREATE TABLE EMP_HR02
AS
SELECT EMPNO, ENAME, HIREDATE FROM EMP WHERE 1=0;

DESC EMP_HR02;
SELECT * FROM EMP_HR02;

CREATE TABLE EMP_SAL
AS
SELECT EMPNO, ENAME, SAL FROM EMP WHERE 1=0;
SELECT * FROM EMP_SAL;

SELECT * FROM EMP;

INSERT ALL
WHEN HIREDATE > '1982/01/01' THEN
INTO EMP_HR02 VALUES (EMPNO, ENAME, HIREDATE)
WHEN SAL > 2000 THEN 
INTO EMP_SAL VALUES(EMPNO, ENAME, SAL)
SELECT EMPNO, ENAME, HIREDATE, SAL FROM EMP;

SELECT * FROM EMP_HR02;
SELECT * FROM EMP_SAL;

-- UPDATE : TABLE 행의 속성 값 수정할 때 사용
SELECT * FROM EMP01;

TRUNCATE TABLE EMP01;

INSERT INTO EMP01
SELECT * FROM EMP;

UPDATE EMP01
SET DEPTNO = 30;

-- 모든 사원의 급여를 10% 인상
UPDATE EMP01
SET SAL = SAL*1.1;

-- 모든 사원의 입사일자를 오늘로 수정
UPDATE EMP01
SET HIREDATE = SYSDATE;

ROLLBACK;

SELECT * FROM EMP01;

INSERT INTO EMP01
SELECT * FROM EMP;

COMMIT;

-- 특정 행만 수정하는 것이 일반적 : WHERE 사용(중요)
-- 10을 30으로 번호 수정
UPDATE EMP01
SET DEPTNO = 30
WHERE DEPTNO = 10;

SELECT * FROM EMP01;

-- 급여가 3000이상만 10% 인상
UPDATE EMP01
SET SAL = SAL*1.1
WHERE SAL >= 3000;

-- 83년 입사자만 입사일을 오늘로 변경
UPDATE EMP01
SET HIREDATE = SYSDATE
WHERE SUBSTR(HIREDATE, 1, 2) = '83';

ROLLBACK;

SELECT * FROM EMP01;

-- SCOTT 사원의 부서코드를 30으로 변경, JOB을 MANAGER로 변경
UPDATE EMP01
SET DEPTNO = 30, JOB = 'MANAGER'
WHERE ENAME = 'SCOTT';

-- SCOTT 사원의 입사일자를 오늘, 급여를 200 인상, 커미션을 2000으로 변경
UPDATE EMP01
SET HIREDATE = SYSDATE, SAL = SAL+200, COMM = 2000
WHERE ENAME = 'SCOTT';

-- SUBQUERY를 사용하여 UPDATE 
SELECT * FROM DEPT01;

UPDATE DEPT01
SET (DNAME, LOC) = (SELECT DNAME, LOC FROM DEPT WHERE DEPTNO=40)
WHERE DEPTNO = 20;

-- DELETE : TABLE의 행을 삭제
DELETE FROM DEPT01;  -- 모든 행 삭제(위험)
 
SELECT * FROM DEPT01;

ROLLBACK;

-- 부서코드가 30인 행만 삭제(가장 많이 사용하는 방식)
DELETE FROM DEPT01 
WHERE DEPTNO=30;

SELECT * FROM EMP01;

DELETE FROM EMP01
WHERE COMM IS NULL AND SAL <= 1000;

ROLLBACK;

-- SUBQUERY를 사용하여 삭제
-- 'SALES' 이름 행 삭제
DELETE FROM EMP01
WHERE DEPTNO = (SELECT DEPTNO FROM DEPT WHERE DNAME='SALES');