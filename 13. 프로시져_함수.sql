-- 21.12.16
-- 1. Stored Procedure (Procedure : Java에서 method의 return type이 void인 경우)
DROP TABLE EMP01;

CREATE TABLE EMP01
AS
SELECT * FROM EMP;

SELECT * FROM EMP01;

-- PROCEDURE를 데이터베이스에 저장하는 명령어
@c:\DevSpace\DBSpace\PROCEDURE01.SQL;

-- 저장된 프로시져 (STORED PROCEDURE)의 이름으로 실행
EXECUTE DEL_ALL;

-- 저장 프로시져 조회하기
DESC USER_SOURCE;
SELECT NAME, TEXT FROM USER_SOURCE;

DROP TABLE EMP01;

CREATE TABLE EMP01
AS
SELECT * FROM EMP;

SELECT * FROM EMP01;

@c:\DevSpace\DBSpace\PROCEDURE02.SQL;

EXECUTE DEL_ENAME ('SMITH');

@c:\DevSpace\DBSpace\PROCEDURE03.SQL;

VARIABLE VAR_ENAME VARCHAR2(15);
VARIABLE VAR_SAL NUMBER;
VARIABLE VAR_JOB VARCHAR2(9);

EXECUTE SEL_EMPNO(7788, :VAR_ENAME, :VAR_SAL, :VAR_JOB);
-- PROCEDURE03.SQL에서 OUT 이 PARAMETER을 값을 넘겨준다. (밖에서 쓸수 있다)
PRINT VAR_ENAME;
PRINT VAR_SAL;
PRINT VAR_JOB;

-- 2. Function (Java에서 method의 return type이 void가 아닌 경우)
-- 저장함수 키워드 FUNCTION + RETURN(위에 것은 PROCEDURE)
@c:\DevSpace\DBSpace\FUNCTION01.SQL;

VARIABLE VAR_RES NUMBER;

EXECUTE :VAR_RES := CAL_BONUS(7788);

PRINT VAR_RES;

-- SELECT 문에서 선언된 함수를 사용 가능
SELECT SAL, CAL_BONUS(7788)
FROM EMP
WHERE EMPNO=7788;